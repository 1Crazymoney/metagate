Transactions регестрируется в javascript по имени transactions 

Q_INVOKABLE void registerAddress(QString address, QString currency, QString type, QString group, QString name);
Зарегестрировать адрес для отслеживания
type - для mth валют это "torrent" или "torrent_main"
Результат вернется в функцию
txsRegisterAddressJs(address, currency, errorNum, errorMessage)

Q_INVOKABLE void registerAddresses(QString addressesJson);
Зарегестрировать адреса для отслеживания
addressesJson - json массив вида [{\"address\":\"address\",\"currency\":\"currency\",\"type\":\"type\",\"group\":\"group\", \"name\":\"name\"}]
Результат вернется в функцию
txsRegisterAddressesJs("Ok", errorNum, errorMessage)

Q_INVOKABLE void getAddresses(QString group);
Получает список всех зарегестрированных адресов
Результат вернется в функцию
txsGetAddressesResultJs(result, errorNum, errorMessage)
где result - json массив вида
[{\"address\":\"address\",\"currency\":\"currency\",\"type\":\"type\",\"group\":\"group\", \"name\":\"name\"}]

Q_INVOKABLE void setCurrentGroup(QString group);
Устанавливает группу, по которой будет идти автоматическое отслеживание изменений
Результат вернется в функцию
txsSetCurrentGroupResultJs("Ok", errorNum, errorMessage)

Q_INVOKABLE void getTxs(QString address, QString currency, QString fromTx, int count, bool asc);
Получение транзакций
fromTx транзакция, с которой продолжать поиск. Если пустая, то с первой (или с последней, в зависимости от параметра asc) транзакции
asc порядок сортировки
Результат вернется в функцию
txsGetTxsJs(address, currency, result, errorNum, errorMessage)
где result - json массив вида
[{\"id\":\"id\",\"from\":\"0x00\",\"to\":\"0x00\",\"value\":\"1\",\"data\":\"0x345534\",\"timestamp\":\"00\",\"fee\":\"1\",\"nonce\":\"1\",\"isInput\":true}]

Q_INVOKABLE void getTxs2(QString address, QString currency, int from, int count, bool asc);
Получение транзакций
fromTx транзакция, с которой продолжать поиск. Если пустая, то с первой (или с последней, в зависимости от параметра asc) транзакции
asc порядок сортировки
Результат вернется в функцию
txsGetTxs2Js(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void getTxsAll(QString currency, QString fromTx, int count, bool asc);
Получение транзакций по всем адресам currency
Результат вернется в функцию
txsGetTxsAllJs(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void getTxsAll2(QString currency, int from, int count, bool asc);
Получение транзакций по всем адресам currency
Результат вернется в функцию
txsGetTxsAll2Js(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void calcBalance(QString address, QString currency);
Получение баланса
Результат вернется в функцию
txsCalcBalanceResultJs(address, currency, result, errorNum, errorMessage)
где result - json вида {\"received\":\"100\",\"spent\":\"100\",\"countReceived\":\"1\",\"countSpent\":\"1\"}


txsNewBalanceJs(address, currency, balanceJson, errorNum, errorMessage)
Возвращается при изменении баланса по остлеживаемому адресу
balanceJson вида {\"received\":\"100\",\"spent\":\"100\",\"countReceived\":\"1\",\"countSpent\":\"1\",\"currBlock\":\"1234567\"}
