Transactions регестрируется в javascript по имени transactions 

Q_INVOKABLE void registerAddress(QString address, QString currency, QString type, QString group, QString name);
Зарегестрировать адрес для отслеживания
type - для mth валют это "torrent" или "torrent_main"
Результат вернется в функцию
txsRegisterAddressJs(address, currency, errorNum, errorMessage)

Q_INVOKABLE void registerAddresses(QString addressesJson);
Зарегестрировать адреса для отслеживания
addressesJson - json массив вида [{\"address\":\"address\",\"currency\":\"currency\",\"type\":\"type\",\"group\":\"group\", \"name\":\"name\"}]
Результат вернется в функцию
txsRegisterAddressesJs("Ok", errorNum, errorMessage)

Q_INVOKABLE void getAddresses(QString group);
Получает список всех зарегестрированных адресов
Результат вернется в функцию
txsGetAddressesResultJs(result, errorNum, errorMessage)
где result - json массив вида
[{\"address\":\"address\",\"currency\":\"currency\",\"type\":\"type\",\"group\":\"group\", \"name\":\"name\",\"balance\":{\"countReceived\":\"1\",\"countSpent\":\"0\",\"currBlock\":\"0\",\"received\":\"4000000000\",\"spent\":\"0\", \"countDelegated\": 0,\"delegate\":\"4000000000\",\"undelegate\":\"0\",\"delegated\":\"4000000000\",\"undelegated\":\"0\",\"balance\":\"10\", \"forged\": \"1000\"}}]

Q_INVOKABLE void setCurrentGroup(QString group);
Устанавливает группу, по которой будет идти автоматическое отслеживание изменений
Результат вернется в функцию
txsSetCurrentGroupResultJs("Ok", errorNum, errorMessage)

Q_INVOKABLE void getTxs(QString address, QString currency, QString fromTx, int count, bool asc);
Пока не работает
Получение транзакций
fromTx транзакция, с которой продолжать поиск. Если пустая, то с первой (или с последней, в зависимости от параметра asc) транзакции
asc порядок сортировки
count == -1 выдать все
Результат вернется в функцию
txsGetTxsJs(address, currency, result, errorNum, errorMessage)
где result - json массив вида
[{\"id\":\"id\",\"from\":\"0x00\",\"to\":\"0x00\",\"value\":\"1\",\"data\":\"0x345534\",\"timestamp\":\"00\",\"fee\":\"1\",\"nonce\":\"1\",\"isInput\":true, \"isDelegate\": true, \"delegate_value\": \"500\", \"blockNumber\":\"0\", \"delegate_hash\":\"546450\",\"type\":\"type\",\"intStatus\":10}]
Параметры isDelegate и delegate_value, delegate_hash - опциональные, если их нет, значит это не транзакция делегации. Если isDelegate == false, значит это транзакция undelegate
type == simple, delegate, forging

Q_INVOKABLE void getTxs2(QString address, QString currency, int from, int count, bool asc);
Получение транзакций в порядке возрастания или убывания
asc порядок сортировки
Выдаются транзакции, начиная с порядкового номера from (в зависимости от сортировки) и количеством count
count == -1 выдать все
Результат вернется в функцию
txsGetTxs2Js(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void getTxsAll(QString currency, QString fromTx, int count, bool asc);
Пока не работает
count == -1 выдать все
Получение транзакций по всем адресам currency
Результат вернется в функцию
txsGetTxsAllJs(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void getTxsAll2(QString currency, int from, int count, bool asc);
Получение транзакций по всем адресам currency
count == -1 выдать все
Результат вернется в функцию
txsGetTxsAll2Js(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void calcBalance(QString address, QString currency);
Получение баланса
Результат вернется в функцию
txsCalcBalanceResultJs(address, currency, result, errorNum, errorMessage)
где result - json вида {\"received\":\"100\",\"spent\":\"100\",\"countReceived\":\"1\",\"countSpent\":\"1\",\"countTxs\":\"1\",\"savedTxs\":\"1\", \"countDelegated\": 0,\"delegate\":\"4000000000\",\"undelegate\":\"0\",\"delegated\":\"4000000000\",\"undelegated\":\"0\",\"balance\":\"10\", \"forged\": \"1000\"}

Q_INVOKABLE void getTxFromServer(QString txHash, QString type);
Получает транзакцию с сервера. 
Результат вернется в функцию
txsGetTxFromServerResultJs(txHash, type, result, errorNum, errorMessage)

Q_INVOKABLE void getLastUpdatedBalance(QString currency);
Запрашивает время последнего изменения балансов по данной валюте
Результат вернется в функцию
txsGetLastUpdatedBalanceResultJs(currency, timestampString, nowString, errorNum, errorMessage)
Результат в милисекундах

Q_INVOKABLE void clearDb(QString currency);
Очищает bd записи, связанные с currency.
После вызова функции необходимо перезагрузить приложение
Результат вернется в функцию
txsClearDbResultJs(currency, "Ok"/"Not ok", errorNum, errorMessage)

Q_INVOKABLE void getForgingTxsAll(QString address, QString currency, int from, int count, bool asc)
Получение транзакций типа FORGING по address и currency
asc порядок сортировки
Выдаются транзакции, начиная с порядкового номера from (в зависимости от сортировки) и количеством count
count == -1 выдать все
Результат вернется в функцию
txsGetForgingTxsJs(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void getDelegateTxsAll(QString address, QString currency, QString to, int from, int count, bool asc);
Получение транзакций типа DELEGATE по address и currency
asc порядок сортировки
Выдаются транзакции, начиная с порядкового номера from (в зависимости от сортировки) и количеством count
count == -1 выдать все
Результат вернется в функцию
txsGetDelegateTxsJs(address, currency, result, errorNum, errorMessage)

Q_INVOKABLE void getLastForgingTx(QString address, QString currency)
Получить последнюю транзакцию с типом FORGING по address и currency
Результат вернется в функцию
txsGetLastForgingTxJs(address, currency, result, errorNum, errorMessage)



txsNewBalanceJs(address, currency, balanceJson, errorNum, errorMessage)
Возвращается при изменении баланса по остлеживаемому адресу. Эта структура указывает на значение баланса на сервере. Если транзакций на адресе слишком много, они могут не успеть к этому моменту докачаться
balanceJson вида как в txsCalcBalanceResultJs

txsSendedTxJs(requestId, server, result, errorNum, errorMessage)
Возвращается при ответе сервера на запрос отправки транзакции

txOnTorrentJs(server, hash, result, errorNum, errorMessage)
Возвращается при появлении на сервере торрента отправленной транзакции
result - json с транзакцией (см выше)

txStatusChangedJs(address, currency, txHash, txJson, errorNum, errorMessage)
Возвращается при изменении статуса транзакции
txJson - json с транзакцией (см выше)

txStatusChanged2Js(txHash, txJson, errorNum, errorMessage)
Возвращается при изменении статуса транзакции в том числе после метода send
txJson - json с транзакцией (см выше)
