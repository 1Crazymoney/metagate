utils регестрируется в javascript по имени utils
 
Q_INVOKABLE void qtOpenInBrowser(const QString &url);
# Opens link in default browser
# After the operation is completed, it calls function
utilsOpenInBrowserJs("Ok", errorNum, errorMessage)

Q_INVOKABLE QString openFolderDialog(QString beginPath, QString caption);
# Shows to user the dialog box providing the ability to select a directory. 
beginPath # initial directory location
caption # name of the dialog box
# After the operation is completed, it calls function
utilsOpenFolderDialogJs(dir, errorNum, errorMessage)

Q_INVOKABLE void saveFileFromUrl(const QString &url, const QString &saveFileWindowCaption, bool openAfterSave, const QString &filePath);
# Shows file save dialog, then downloads the file and saves it.
# After the operation is completed, it calls function
# Отличие от аналогичной функции в mainWindows в том, что вместо относительного пути fileName нужно задавать абсолютный путь filePath
utilsSaveFileFromUrlJs("Ok", errorNum, errorMessage)

Q_INVOKABLE void chooseFileAndLoad2(const QString &openFileWindowCaption, const QString &filePath);
# Shows the file selection dialog, then encodes the selected file in base64 and sends it to the function
# Отличие от аналогичной функции в mainWindows в том, что вместо относительного пути fileName нужно задавать абсолютный путь filePath
utilsChooseFileAndLoad2UrlJs(result, errorNum, errorMessage)

Q_INVOKABLE void onQrEncode(const QString &textHex);
# Encodes text to qr code
# Result returns to the function:
utilsQrEncodeJs(result, errorNum, errorMessage);
# where result is a png image in base64

Q_INVOKABLE void qrDecode(const QString &imageBase64);
# Decodes text from qr code
# Result returns to the function:
utilsQrDecodeJs(requestId, result);
# where result is a text in base16

Q_INVOKABLE void javascriptLog(const QString &message);
# Записать в лог сообщение от javascript
